/*! minos v0.1.0 */
"use strict";var minos=function(a){if("string"==typeof a){var b=minos.find(a);return new minos.Set(b)}if(a instanceof Node){var c=[a];return new minos.Set(c)}};minos.find=function(a){return document.querySelectorAll(a)},minos.plug=function(a,b){minos.Set.prototype[a]=b},minos.Set=function(a){this.elements=a},minos.plug("each",function(a){for(var b=0;b<this.elements.length;b+=1)a.call(this.elements[b],this.elements[b],b);return this}),minos.plug("get",function(a){return this.elements[a]}),minos.plug("appendTo",function(a){var b;if("string"==typeof a){var c=minos.find(a);b=c[0]}else a instanceof minos.Set?b=a.get(0):a instanceof Node&&(b=a);return b&&this.each(function(a){b.appendChild(a)}),this}),minos.plug("remove",function(){return this.each(function(a){a.parentNode&&a.parentNode.removeChild(a)})}),minos.plug("clone",function(){var a=[];return this.each(function(b){a.push(b.cloneNode(!0))}),new minos.Set(a)}),minos.plug("length",function(){return this.elements.length}),minos.plug("hasClass",function(a){var b=!1;return this.each(function(c){var d=c.className.split(" ");-1!==d.indexOf(a)&&(b=!0)}),b}),minos.plug("addClass",function(a){return this.each(function(b){var c=b.className.split(" ");-1===c.indexOf(a)&&(c.push(a),b.className=c.join(" "))})}),minos.plug("removeClass",function(a){return this.each(function(b){var c=b.className.split(" ");-1!==c.indexOf(a)&&(c.splice(c.indexOf(a),1),b.className=c.join(" "))})}),minos.plug("toggleClass",function(a){return this.each(function(b){var c=minos(b);c.hasClass(a)?c.removeClass(a):c.addClass(a)})}),minos.plug("attr",function(a,b){return void 0===b?this.get(0).getAttribute():this.each(function(c){c.setAttribute(a,b)})}),minos.plug("text",function(a){return void 0===a?this.get(0).textContent:this.each(function(b){b.textContent=a})}),window.minos=minos;